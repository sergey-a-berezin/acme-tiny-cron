#!/bin/bash
# Copyright 2017 Sergey Berezin

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$DIR"

function search_python3 {
    local _return_val="$1"
    declare -a p3=("python" "python3" "python3.5")
    for p in "${p3[@]}"; do
	echo "Trying $p for Python 3.x"
	if ! which "$p" > /dev/null; then
	    continue
	fi
	version_major=`$p -c 'import sys; print(sys.version_info.major)'`
	version_minor=`$p -c 'import sys; print(sys.version_info.minor)'`
	if [ "${version_major}" == "3" ]; then
	    eval $_return_val="'${p}'"
	    if [ "${version_minor}" -lt "5" ]; then
		echo "    WARNING: your Python 3 is ${version_major}.${version_minor}."
		echo "    Consider upgrading to 3.5 or higher."
	    fi
	    echo "Found $p as Python 3.$version_minor"
	    break
	fi
    done
}

function setup_env2 {

    if [ ! -d env2 ]; then
	if ! which virtualenv > /dev/null; then
	    echo "  WARNING: Couldn't find virtualenv installation."
	    echo "  Python 2.7 env2 will not be created"
	else
	    virtualenv env2
	fi
    else
	echo "Reusing the existing env2"
    fi
    if [ -d env2 ]; then
	(source env2/bin/activate; pip install -U pip; pip install -r pip2.deps; deactivate)
    fi
}

function setup_env3 {
    if [ ! -d env3 ]; then
	search_python3 PYTHON3
	if [ -z "$PYTHON3" ]; then
	    echo "  WARNING: Couldn't find Python 3 installation."
	else
	    "$PYTHON3" -m venv env3
	fi
    else
	echo "Reusing the existing env3"
    fi
    if [ -d env3 ]; then
	(source env3/bin/activate; pip install -U pip; pip install -r pip3.deps; deactivate)
    fi
}

setup_env2
setup_env3
