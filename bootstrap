#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$DIR"

function search_python3 {
    local _return_val="$1"
    declare -a p3=("python" "python3" "python3.5")
    for p in "${p3[@]}"; do
	echo "Trying $p for Python 3.x"
	if ! which "$p" > /dev/null; then
	    continue
	fi
	version_major=`$p -c 'import sys; print(sys.version_info.major)'`
	version_minor=`$p -c 'import sys; print(sys.version_info.minor)'`
	if [ "${version_major}" == "3" ]; then
	    eval $_return_val="'${p}'"
	    if [ "${version_minor}" -lt "5" ]; then
		echo "    WARNING: your Python 3 is ${version_major}.${version_minor}."
		echo "    Consider upgrading to 3.5 or higher."
	    fi
	    echo "Found $p as Python 3.$version_minor"
	    break
	fi
    done
}

if [ ! -d env2 ]; then
    if ! which virtualenv > /dev/null; then
	echo "  WARNING: Couldn't find virtualenv installation."
	echo "  Python 2.7 env2 will not be created"
    else
	virtualenv env2
    fi
else
    echo "Reusing the existing env2"
fi
if [ -d env2 ]; then
    (source env2/bin/activate; pip install -U pip; pip install -r pip2.deps; deactivate)
fi

if [ ! -d env3 ]; then
    search_python3 PYTHON3
    if [ -z "$PYTHON3" ]; then
	echo "  WARNING: Couldn't find Python 3 installation."
    else
	"$PYTHON3" -m venv env3
    fi
else
    echo "Reusing the existing env3"
fi
if [ -d env3 ]; then
    (source env3/bin/activate; pip install -U pip; pip install -r pip3.deps; deactivate)
fi
